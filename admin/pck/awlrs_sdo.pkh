CREATE OR REPLACE PACKAGE awlrs_sdo
AS
  -------------------------------------------------------------------------
  --   PVCS Identifiers :-
  --
  --       PVCS id          : $Header:   //new_vm_latest/archives/awlrs/admin/pck/awlrs_sdo.pkh-arc   1.3   12 May 2017 14:45:26   Mike.Huitson  $
  --       Module Name      : $Workfile:   awlrs_sdo.pkh  $
  --       Date into PVCS   : $Date:   12 May 2017 14:45:26  $
  --       Date fetched Out : $Modtime:   08 May 2017 23:50:58  $
  --       Version          : $Revision:   1.3  $
  -------------------------------------------------------------------------
  --   Copyright (c) 2017 Bentley Systems Incorporated. All rights reserved.
  -------------------------------------------------------------------------
  --
  --g_sccsid is the SCCS ID for the package
  g_sccsid   CONSTANT VARCHAR2 (2000) := '$Revision:   1.3  $';
  --
  TYPE gtype_rec IS RECORD(theme_id  nm_theme_gtypes.ntg_theme_id%TYPE
                          ,gtype     nm_theme_gtypes.ntg_gtype%TYPE);
  TYPE gtype_tab IS TABLE OF gtype_rec INDEX BY BINARY_INTEGER;
  --
  TYPE extent_rec IS RECORD(min_x  NUMBER
                           ,min_y  NUMBER
                           ,max_x  NUMBER
                           ,max_y  NUMBER);
  /*
  ||The ne_unique column in the record below is based upon ne_name_1
  ||because AWLRS has to work with the NGS Network Elements and the 
  ||column that stores the user recognisable identifier could therefore
  ||be ne_unique, ne_number or ne_name_1, ne_name_1 being the largest column.
  */
  TYPE snap_to_network_results_rec IS RECORD(ne_id              nm_elements_all.ne_id%TYPE
                                            ,ne_unique          nm_elements_all.ne_name_1%TYPE
                                            ,ne_descr           nm_elements_all.ne_descr%TYPE
                                            ,ne_nt_type         nm_types.nt_type%TYPE
                                            ,ne_gty_group_type  nm_elements_all.ne_gty_group_type%TYPE
                                            ,ne_type            nm_elements_all.ne_type%TYPE
                                            ,offset             NUMBER
                                            ,unit_id            nm_units.un_unit_id%TYPE
                                            ,unit_name          nm_units.un_unit_name%TYPE
                                            ,distance           NUMBER
                                            ,snapped_x          NUMBER
                                            ,snapped_y          NUMBER);
  TYPE snap_to_network_results_tab IS TABLE OF snap_to_network_results_rec INDEX BY BINARY_INTEGER;
  --
  -----------------------------------------------------------------------------
  --
  FUNCTION get_version
    RETURN VARCHAR2;

  --
  -----------------------------------------------------------------------------
  --
  FUNCTION get_body_version
    RETURN VARCHAR2;

  --
  ------------------------------------------------------------------------------
  --
  PROCEDURE get_start_x_y(pi_shape IN  mdsys.sdo_geometry
                         ,po_x     OUT NUMBER
                         ,po_y     OUT NUMBER);

  --
  ------------------------------------------------------------------------------
  --
  PROCEDURE get_end_x_y(pi_shape IN  mdsys.sdo_geometry
                       ,po_x     OUT NUMBER
                       ,po_y     OUT NUMBER);

  --
  -----------------------------------------------------------------------------
  --
  FUNCTION get_gtypes(pi_theme_id IN nm_themes_all.nth_theme_id%TYPE)
    RETURN gtype_tab;

  --
  -----------------------------------------------------------------------------
  --
  FUNCTION get_gtypes(pi_theme_name IN nm_themes_all.nth_theme_name%TYPE)
    RETURN gtype_tab;

  --
  ------------------------------------------------------------------------------
  --
  FUNCTION sdo_geom_to_wkt(pi_geom IN mdsys.sdo_geometry)
    RETURN CLOB;

  --
  -----------------------------------------------------------------------------
  --
  FUNCTION wkt_to_sdo_geom(pi_theme_name IN nm_themes_all.nth_theme_name%TYPE
                          ,pi_shape      IN CLOB)
    RETURN mdsys.sdo_geometry;

  --
  -----------------------------------------------------------------------------
  --
  FUNCTION get_theme_extent(pi_theme_id IN nm_themes_all.nth_theme_id%TYPE)
    RETURN extent_rec;

  --
  -----------------------------------------------------------------------------
  --
  FUNCTION snap_to_network(pi_x             IN NUMBER
                          ,pi_y             IN NUMBER
                          ,pi_theme_name    IN nm_themes_all.nth_theme_name%TYPE
                          ,pi_search_radius IN NUMBER DEFAULT NULL)
    RETURN snap_to_network_results_tab;

  --
  -----------------------------------------------------------------------------
  --
  PROCEDURE snap_to_network(pi_x                IN  NUMBER
                           ,pi_y                IN  NUMBER
                           ,pi_theme_name       IN  nm_themes_all.nth_theme_name%TYPE
                           ,pi_search_radius    IN  NUMBER DEFAULT NULL
                           ,po_message_severity OUT hig_codes.hco_code%TYPE
                           ,po_message_cursor   OUT sys_refcursor
                           ,po_cursor           OUT sys_refcursor);

  --
  ------------------------------------------------------------------------------
  --
  PROCEDURE snap_to_element(pi_x          IN  NUMBER
                           ,pi_y          IN  NUMBER
                           ,pi_element_id IN  nm_elements_all.ne_id%TYPE
                           ,pi_theme_name IN  nm_themes_all.nth_theme_name%TYPE
                           ,po_offset     OUT NUMBER);

  --
  ------------------------------------------------------------------------------
  --
  PROCEDURE snap_to_element(pi_x                IN  NUMBER
                           ,pi_y                IN  NUMBER
                           ,pi_element_id       IN  nm_elements_all.ne_id%TYPE
                           ,pi_theme_name       IN  nm_themes_all.nth_theme_name%TYPE
                           ,po_message_severity OUT hig_codes.hco_code%TYPE
                           ,po_message_cursor   OUT sys_refcursor
                           ,po_cursor           OUT sys_refcursor);

  --
  ------------------------------------------------------------------------------
  --
  PROCEDURE get_point_from_element_offset(pi_theme_name       IN  nm_themes_all.nth_theme_name%TYPE
                                         ,pi_element_id       IN  nm_elements_all.ne_id%TYPE
                                         ,pi_offset           IN  NUMBER
                                         ,po_message_severity OUT hig_codes.hco_code%TYPE
                                         ,po_message_cursor   OUT sys_refcursor
                                         ,po_cursor           OUT sys_refcursor);

  --
  ------------------------------------------------------------------------------
  --
  PROCEDURE get_point_from_element_offset(pi_theme_id IN  nm_themes_all.nth_theme_id%TYPE
                                         ,pi_ne_id    IN  nm_elements_all.ne_id%TYPE
                                         ,pi_offset   IN  NUMBER
                                         ,po_x        OUT NUMBER
                                         ,po_y        OUT NUMBER);

  --
  ------------------------------------------------------------------------------
  --
  PROCEDURE get_element_vertices(pi_theme_name       IN  nm_themes_all.nth_theme_name%TYPE
                                ,pi_element_id       IN  nm_elements_all.ne_id%TYPE
                                ,po_message_severity OUT hig_codes.hco_code%TYPE
                                ,po_message_cursor   OUT sys_refcursor
                                ,po_cursor           OUT sys_refcursor);

  --
  -----------------------------------------------------------------------------
  --
  PROCEDURE get_linear_elements_at_point(pi_x                IN  NUMBER
                                        ,pi_y                IN  NUMBER
                                        ,po_message_severity OUT hig_codes.hco_code%TYPE
                                        ,po_message_cursor   OUT sys_refcursor
                                        ,po_cursor           OUT sys_refcursor);

  --
  -----------------------------------------------------------------------------
  --
  PROCEDURE get_location_geometry_wkt(pi_element_id       IN  nm_elements_all.ne_id%TYPE
                                     ,pi_from_offset      IN  NUMBER
                                     ,pi_to_offset        IN  NUMBER
                                     ,po_message_severity OUT hig_codes.hco_code%TYPE
                                     ,po_message_cursor   OUT sys_refcursor
                                     ,po_cursor           OUT sys_refcursor);

--
------------------------------------------------------------------------------
--
END awlrs_sdo;
/